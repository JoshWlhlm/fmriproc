#!/usr/bin/env python

import os
import numpy as np
import cortex
import sys
import random
from pathlib import Path
from lazyfmri import utils

base, place = utils.get_base_dir()
opj = os.path.join

hemi = None
# define subject folder

if len(sys.argv) != 3:
    print("ERROR: more arguments required")
else:
    subject = sys.argv[1]
    hemi    = sys.argv[2]

cxdir = opj(os.environ['CTX'])
prfdir = opj(os.environ['PRF'])

if hemi == "left":
    search = "hemi-L_"
elif hemi == "right":
    search = "hemi-R_"
elif hemi == "both":
    search = "hemi-LR_"
else:
    raise NameError(f"Unknown option for hemisphere: {hemi}. Need 'left', 'right', or 'both'")

vert = utils.get_file_from_substring(search, opj(prfdir, f'sub-{subject}'))
if vert is not None:
    print(f"  Loading in vertex array: {vert}")
else:
    raise ValueError(f"Could not find array: {vert}")

print(f"  Converting to vertex map")
if Path(vert).suffix == ".npy":
    # numpy array
    vert = np.load(vert)

vert_map = cortex.Vertex(vert, subject=f'sub-{subject}', cmap='magma', vmin=-0.5, vmax=1)

port = random.randint(1024,65536)
if place == "spin":
    cortex.webshow({'best vertex': vert_map}, open_browser=False, port=port)
    print("  Now run {script} {port} in your local terminal".format(script=os.path.join(os.environ['DIR_SCRIPTS'], 'bin', 'call_webviewer.sh', port=port)))
else:
    cortex.webshow({'best vertex': vert_map}, open_browser=True, port=port)
    os.wait()
