#!/usr/bin/env python

try:
    import nighres
except Exception:
    raise ImportError(f"Could not import 'nighres'.. Please install")

import os
import sys
import getopt
import numpy as np
from lazyfmri import utils
from fmriproc.transform import fs2tkr
opj = os.path.join

@utils.validate_cli_inputs(required_keys=["subject", "mesh", "output"])
def main(context):
    r"""
---------------------------------------------------------------------------------------------------
call_nighres2freesurfer

Convert a Nighres surface mesh to a FreeSurfer-compatible format. This script is useful when 
integrating Nighres CRUISE cortical surface reconstructions with FreeSurfer tools (e.g., for 
visualization or further processing in FreeView).

The general pipeline assumes you've already:
  1)  Resampled the levelset output from Nighres to FreeSurfer space (e.g., using 
      'call_antsapplytransform')
  2)  Created a mesh from the resampled levelset using 'call_nighreslevelmesh'
  3)  Use this script to convert the mesh to FreeSurfer RAS coordinates and save it in 
      FS-compatible format

Usage:
  call_nighres2freesurfer <subject> <mesh_file> <output_file>

Mandatory:
  <subject>       Subject ID, as defined in the FreeSurfer SUBJECTS_DIR
  <mesh_file>     Path to a .vtk mesh created by 'call_nighreslevelmesh'
  <output_file>   Desired output file (e.g., lh.nighres.white)

Outputs:
  - A mesh file in FreeSurfer RAS coordinate space
  - Can be opened with FreeView for QC or visualization

Dependencies:
  - Requires Nighres
  - Requires valid FreeSurfer setup (for RAS conversion via 'fmriproc.transform.fs2tkr')

Example:
  call_nighres2freesurfer sub-001 sub-001_desc-l2m_mesh.vtk lh.nighres.white

---------------------------------------------------------------------------------------------------
    """

    subject = context["subject"]
    mesh_fn = context["mesh"]
    output = context["output"]

    mesh = nighres.io.load_mesh(mesh_fn)
    mesh.pop('data')

    # nighres saves coordinates in voxel, not RAS like freesurfer
    coords = mesh['points']
    coords = np.hstack((coords, np.ones((coords.shape[0],1))))
    ras_coords = fs2tkr(subject, coord=coords)
    mesh['points'] = ras_coords
    nighres.io.save_mesh_geometry(output, mesh)

if __name__ == "__main__":
    subject = None
    mesh_fn = None
    output = None

    try:
        opts = sys.argv[1:]
        if len(opts) < 3:
            print(main.__doc__)
            sys.exit()
    except getopt.GetoptError:
        print(main.__doc__, flush=True)
        print("ERROR while handling arguments.. Did you specify an 'illegal' argument..?", flush=True)
        sys.exit(2)

    subject = opts[0]
    mesh_fn = opts[1]
    output = opts[2]

    main(context={
        "subject": subject,
        "mesh": mesh_fn,
        "output": output
    })
