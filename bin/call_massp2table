#!/usr/bin/env python

import os
import sys
import getopt
from fmriproc.image import massp_to_tablefrom fmriproc.image import massp_to_table
opj = os.path.join

def main(argv):

    """
---------------------------------------------------------------------------------------------------
call_massp2table

Convert a MASSP (Multiple Automatically Segmented Subcortical Structures) label image into a
tabular file with volumetric statistics per region. This can be useful for group analyses,
descriptive stats, or as QC metrics in volumetric pipelines.

The script supports two unit types:
  - "mm"     = cubic millimeters (default)
  - "voxels" = number of labeled voxels

Usage:
  call_massp2table -l <label_image> [-o <output_file>] [-u mm|voxels]

Mandatory:
  -l|--label      Path to the MASSP label image (NIfTI format)

Optional:
  -o|--out        Output file name [default: label.json]
  -u|--unit       Unit of measure: "mm" for mmÂ³ (default), or "voxels" for raw counts

Options:
  -h|--help       print this help text
  
Outputs:
  A JSON or TSV file (depending on your specification) with volume per structure

Example:
  call_massp2table -l sub-01_label.nii.gz -o sub-01_volumes.json
  call_massp2table --label label.nii.gz --unit voxels --out subj1.tsv

---------------------------------------------------------------------------------------------------
    """

    input   = None
    output  = "label.json"
    unit    = "mm"

    try:
        opts = getopt.getopt(
            argv,
            "hl:o:u:",
            ["help", "label=", "out=", "unit="]
        )[0]
    except getopt.GetoptError:
        print(main.__doc__)
        sys.exit(2)

    for opt, arg in opts:
        if opt in ("-h", "--help"):
            print(main.__doc__)
            sys.exit()
        elif opt in ("-l", "--label"):
            input = arg
        elif opt in ("-o", "--out"):
            output = arg
        elif opt in ("-u", "--unit"):
            unit = arg            

    if len(argv) < 2:
        print(main.__doc__)
        sys.exit()

    #-----------------------------------------------------------------------------
    # Convert label to volume table

    if os.path.exists(input):
        vol_file = massp_to_table(
            input,
            out=output,
            unit=unit
        )
        print(f"\nwrote {vol_file}")
    else:
        raise FileNotFoundError(f"Could not find file {input}")

if __name__ == "__main__":
    main(sys.argv[1:])
