#!/usr/bin/env bash

#-----------------------------------------------------------------------------
# Get bash helper functions
source call_bashhelper

#-----------------------------------------------------------------------------
# Create help text
function Usage {
    cat <<USAGE

---------------------------------------------------------------------------------------------------
call_checksegmentations

Quick launcher for checking segmentations using ITK-SNAP. This script searches for common 
segmentation outputs (e.g., GM, WM, cruise, ribbon) in the default manual_masks/<subject>/<session>
directory and opens them alongside the anatomical reference image. This is intended to streamline 
quality checks and save manual clicks.

Usage:
  call_checksegmentations -s <subject> -n <session>

Arguments:
  -s <subject>    BIDS-style subject ID (e.g., sub-001)
  -n <session>    Session label or number (e.g., 1)

Details:
  - Looks in:     \$MASKS/<subject>/ses-<session>/
  - Loads files:  GM, WM, CSF, cruise_cortex, ribbon, cruise_mask (if present)
  - Ref:          \$DIR_DATA_DERIV/cat12/<subject>/ses-<session>/*T1w.nii.gz
  - Opens:        ITK-SNAP with all found segmentations layered on top

Example:
  call_checksegmentations -s sub-001 -n 1
    â†’ opens ITK-SNAP with T1-weighted anatomy and overlays of GM/WM/cruise masks etc.

Notes:
  - This script assumes a standard directory structure and naming convention.
  - Segmentations must be in .nii.gz format.
  - If a segmentation is missing, a warning is printed but processing continues.
  - Requires ITK-SNAP to be installed and callable via 'launch_itksnap' (call_bashhelper).

---------------------------------------------------------------------------------------------------

USAGE

}

if [[ $# -lt 1 ]] ; then
  Usage && exit 0
fi

# Check for subject & session flags
while getopts s:n: argument
do
  case ${argument} in
    s)  sub="${OPTARG}"
          ;;
    n)  ses="${OPTARG}"
          ;;
  esac
done

#-----------------------------------------------------------------------------
# collect subject name
read base_path base <<< "$(collect_session_info "$ses" "$sub")"

#-----------------------------------------------------------------------------
# find segmentations
declare -a SEG=(
  "label-GM"
  "label-WM"
  "label-CSF"
  "cruise_cortex"
  "ribbon_wm"
  "ribbon_gm"
  "ribbon_mask"
  "cruise_mask"

)
ARRAY=()
j=0
for r in ${SEG[@]}; do
  file=$(
    find "${MASKS}/${base_path}" \
    -type f \
    -name "*${r}*" \
    -and -name "*.nii.gz" \
    2>/dev/null
  )

  if [[ -f "${file}" ]]; then

    if [[ ${j} -eq 0 ]]; then
        ADD_SEG=$(echo "-o ${file}")
    else
        ADD_SEG=$(echo " ${file}")
    fi
    ARRAY+=("${ADD_SEG}")
    ((j++))
  else
    echo "${sub}: Could not find \"${r}\" image in directory"
  fi
done

#-----------------------------------------------------------------------------
# find anatomical file
ANAT=$(
  find "${DIR_DATA_DERIV}/cat12/${base_path}" \
  -type f \
  -name "${sub}*" \
  -and -name "*T1w.nii.gz" \
  2>/dev/null
)

#-----------------------------------------------------------------------------
# define cmd
cmd=(
  launch_itksnap
  -g "${ANAT}"
  "${ARRAY[@]}"
)
print_cmd "${cmd[@]}" && eval "${cmd[@]}"  

