#!/usr/bin/env python

import os
import sys
import ast
import numpy as np
from fmriproc.transform import native_to_scanner

opj = os.path.join

def main(argv):
    """
---------------------------------------------------------------------------------------------------
call_ras2vox

Convert a world-space RAS (Right-Anterior-Superior) coordinate to a voxel-space coordinate using
the affine matrix from a reference image. This is often needed when working with anatomical
labels, landmarks, or transformation matrices across imaging spaces.

Usage:
  call_ras2vox <coord> <reference>

Arguments:
  <coord>         Coordinate in the format [x,y,z], e.g., [-15,-98,-2]
                  Must be passed as a string with no spaces between values.
  <reference>     Path to reference image (NIfTI/MGH) used to obtain voxel-to-world mapping

Outputs:
  Terminal output showing the [i,j,k] voxel coordinate corresponding to the input RAS coordinate

Example:
  call_ras2vox [-15,-98,-2] orig.mgz

Notes:
  - The reference image must contain a valid affine matrix
  - Internally uses the 'native_to_scanner' function from fmriproc with 'inv=True' to invert the
    affine and perform RAS â†’ voxel transformation
  - The resulting coordinate is printed to stdout, making it easy to pipe or redirect

---------------------------------------------------------------------------------------------------
    """

    if len(argv) < 2:
        print(main.__doc__)
        sys.exit()

    coord = argv[0]
    ref   = argv[1]

    try:
      coord = np.array(ast.literal_eval(coord))
    except:
      raise ValueError(f"You used '{coord}'. Make sure to use '[x,y,z]' (comma-separated and no spaces)")
    
    vox = native_to_scanner(
        ref,
        coord=coord,
        inv=True
    )

    print(vox[:3])

if __name__ == "__main__":
    main(sys.argv[1:])
