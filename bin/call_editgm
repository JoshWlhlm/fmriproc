#!/usr/bin/env bash

#-----------------------------------------------------------------------------
# Get bash helper functions
source call_bashhelper

#-----------------------------------------------------------------------------
# Create help text
function Usage {
    cat <<USAGE

---------------------------------------------------------------------------------------------------
call_editgm

Script to create a manual edit of gray matter segmentation based on CRUISE from Nighres. THe script
will open ITK-Snap to create a manual edit file.

Args:
  -s <subject>  subject ID
  -n <session>  session number
  <t1 ref>      reference t1-weighted image
  <cruise seg>  cruise cortical segmentation image (cruise_cortex.nii.gz)
  <man seg fn>  output file name of manual segmentation

Specify only '-s' and/or 'n' if you've run the pipeline as it is without changing directories or 
filenames; this option will look for all the default directories and files. If you want to edit
your own things, specify the the paths to the required files and leave the '-s' and '-n' flag 
empty.

Usage:
  call_editgm -s <subject> -n 1 <t1w reference> <CRUISE cortex file> <segmentation file name>

Example:
  call_editgm t1w.nii.gz cruise_cortex.nii.gz sub-001_desc-manualseggm.nii.gz
  call_editgm -s sub-001 -n 1

---------------------------------------------------------------------------------------------------

USAGE
    exit 1
}

if [[ $# -lt 1 ]] ; then
  Usage >&2
  exit 1
fi

# Check for subject & session flags
anat_depth=4
while getopts s:n:a: argument
do
  case ${argument} in
    s)  sub=${OPTARG}
          ;;
    n)  ses=${OPTARG}
          ;;
    a)  anat_depth=${OPTARG}
          ;;          
  esac
done

#-----------------------------------------------------------------------------
# Run it

if [[ ! -z ${sub} ]]; then

  # collect subject name
  read base_path base <<< "$(collect_session_info "$ses" "$sub")"
  mask_dir="${DIR_DATA_DERIV}/manual_masks/${base_path}"

  # anatomical reference
  ANAT_DIR=$(find_hierarchical_anatomy ${anat_depth})
  if [[ ! -d ${ANAT_DIR} ]]; then
    echo
    print_line -
    print_error_msg "$(basename ${0})" "find_hierarchical_anatomy" "Directory ${BOLD_GREEN}${ANAT_DIR}${RESET} does not exist. Reduce depth (=${anat_depth})"
    exit 1
  fi

  REF=$(find ${ANAT_DIR}/${base_path} -type f -name "${sub}*" -and -name "*T1w.nii.gz" 2>/dev/null)
  if [[ ! -f ${REF} ]]; then
    echo
    print_line -
    print_error_msg "$(basename ${0})" "find" "No file with ${BOLD_RED}${sub}*${RESET} and ${BOLD_RED}*T1w.nii.gz${RESET} in ${BOLD_GREEN}${ANAT_DIR}${RESET}"
    exit 1
  fi

  SEG=$(find "${mask_dir}" -type f -name "${sub}*" -and -name "*cruise_cortex.nii.gz" 2>/dev/null)
  MAN=${mask_dir}/${base}_acq-${DATA}_desc-manualseggm.nii.gz

else
  REF=${@:$OPTIND:1}
  SEG=${@:$OPTIND+1:1}
  MAN=${@:$OPTIND+2:1}
fi

if [[ ! -f ${MAN} ]]; then
  if [[ ! -d $(dirname ${MAN}) ]]; then
    mkdir -p $(dirname ${MAN})
  fi
  print_create_img "${MAN}"
  cmd="call_createimg ${REF} ${MAN}"
  print_cmd "${cmd}" && eval "${cmd}"

  if [[ $? -ne 0 || ! -f ${MAN} ]]; then
    echo
    print_line -
    print_error_msg "$(basename ${0})" "call_createimg" "Mask ${BOLD_GREEN}${MAN}${RESET} was not created"
    exit 1
  fi    
fi

echo -e "T1w: ${BOLD_GREEN}${REF}${RESET}"
echo -e "Mask: ${BOLD_GREEN}${MAN}${RESET}"

# define command
if [[ -f ${SEG} ]]; then
  echo -e "CRUISE: ${BOLD_GREEN}${SEG}${RESET}"
  cmd="launch_itksnap -g ${REF} -o ${SEG} -s ${MAN}"
else
  cmd="launch_itksnap -g ${REF} -s ${MAN}"
fi

print_cmd "${cmd}" && eval "${cmd}" 2>/dev/null
if [[ $? -ne 0 ]]; then
  echo
  print_line -
  print_error_msg "$(basename ${0})" "launch_itksnap"
  exit 1
fi

# copy header
cmd="call_copyheader ${REF} ${MAN}"
print_cmd "${cmd}" && eval "${cmd}"
if [[ $? -ne 0 ]]; then
  echo
  print_line -
  print_error_msg "$(basename ${0})" "call_copyheader"
  exit 1
fi
