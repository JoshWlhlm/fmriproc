#!/usr/bin/env bash

#-----------------------------------------------------------------------------
# Get bash helper functions
source call_bashhelper

#-----------------------------------------------------------------------------
# Create help text
function Usage {
    cat <<EOF

---------------------------------------------------------------------------------------------------
call_complex

Converts a pair of real and imaginary MP2RAGE images into complex images, and then splits them 
into magnitude and phase images. Outputs are compatible with downstream pipelines such as 
pymp2rage.

Usage:
  call_complex <real_image> <imaginary_image> <output_basename>

Mandatory arguments:
  <real>          Path to the NIfTI file containing real-valued MP2RAGE images
  <imag>          Path to the NIfTI file containing imaginary-valued MP2RAGE images
  <basename>      Output base name (e.g., sub-01_ses-1_acq-MP2RAGE).
                  "_inv-{1,2}_part-{mag,phase}.nii.gz" will be appended

Functionality:
  - Uses fslcomplex to combine real and imaginary data into a complex-valued image
  - Automatically splits the complex image into magnitude and phase using polar representation
  - Reorients all outputs to LPI and copies geometry for consistency
  - Checks that both inputs contain at least two 3D volumes (dim4 >= 2), corresponding to INV1 and
    INV2
  - Outputs:
      <basename>_inv-1_part-mag.nii.gz
      <basename>_inv-1_part-phase.nii.gz
      <basename>_inv-2_part-mag.nii.gz
      <basename>_inv-2_part-phase.nii.gz

Requirements:
  - FSL must be installed and accessible from the command line
  - Scripts 'call_reorient' and 'fetch_filepath' must be available in your environment
  - ENV variable SETUP_FILE must be set if needed for loading dependencies

Example:
  call_complex real.nii.gz imag.nii.gz sub-01_ses-1_acq-MP2RAGE

  This will output:
    sub-01_ses-1_acq-MP2RAGE_inv-1_part-mag.nii.gz
    sub-01_ses-1_acq-MP2RAGE_inv-1_part-phase.nii.gz
    sub-01_ses-1_acq-MP2RAGE_inv-2_part-mag.nii.gz
    sub-01_ses-1_acq-MP2RAGE_inv-2_part-phase.nii.gz

---------------------------------------------------------------------------------------------------

EOF
}

#-----------------------------------------------------------------------------
# Deal with arguments
if [[ $# -lt 3 ]] ; then
  Usage && exit 0
fi

#-----------------------------------------------------------------------------
# read args
real="${1}"
imag="${1}"
out="${3}"

#-----------------------------------------------------------------------------
# check inputs
if [[ ! -f "${real}" ]]; then
  echo
  print_line -
  print_error_msg "$(basename ${0})" input "Could not find REAL image \"${BOLD_GREEN}${real}${RESET}\""
  exit 1
else
  real="$(readlink -f "${real}")"
fi

if [[ ! -f "${imag}" ]]; then
  echo
  print_line -
  print_error_msg "$(basename ${0})" input "Could not find IMAGINARY image \"${BOLD_GREEN}${imag}${RESET}\""
  exit 1
else
  imag="$(readlink -f "${imag}")"
fi

if [[ -z "${out}" ]]; then
  echo
  print_line -
  print_error_msg "$(basename ${0})" input "Please specify output file"
  exit 1
fi

#-----------------------------------------------------------------------------
# check dimensions
for f in "${real}" "${imag}"; do
	dim=$(fslval "${f}" dim4)
	if [[ ${dim} -lt 2 ]]; then
    echo
    print_line -
    print_error_msg "$(basename ${0})" "dim" "${f} only has ${dim} dimensions. This file must contain 2x 3D images"
    exit 1
	fi
done

# loop through inversions
for inv in $(seq 1 2); do
	
  echo "Dealing with INV-${inv}"
  echo " Combine real/imag into complex.."
  ix=$((inv-1))
	# combine real/imag into complex
	cplx="${out}_inv-${inv}_part-complex.nii.gz"
	cmd=(
    fslcomplex
    -complex "${real}"
    "${imag}"
    "${cplx}"
    "${ix}" 
    "${ix}"
  )

  print_cmd "${cmd[@]}" && eval "${cmd[@]}"
  if [[ $? -ne 0 ]]; then
    echo
    print_line -
    print_error_msg "$(basename ${0})" fslcomplex
    exit 1
  fi
  
  # change orientation to LPI
  if [[ -f "${cplx}" ]]; then

    echo " Split complex into magnitude/phase.."

    # split complex into mag/phase
    mag="${out}_inv-${inv}_part-mag.nii.gz"
    ph="${out}_inv-${inv}_part-phase.nii.gz"
    cmd=(
      fslcomplex
      -realpolar "${cplx}"
      "${mag}"
      "${ph}"
    )

    print_cmd "${cmd[@]}" && eval "${cmd[@]}"
    if [[ $? -ne 0 ]]; then
      echo
      print_line -
      print_error_msg "$(basename ${0})" fslcomplex
      exit 1
    fi

    # fix affines
    echo " Copying geometry from complex and reorient to LPI"
    for f in ${mag} ${ph}; do
      call_copyheader "${cplx}" "${f}"
      call_reorient -i "${f}"
    done
  else
    echo
    print_line -
    print_error_msg "$(basename ${0})" "find" "Could not find complex image \"${BOLD_GREEN}${cplx}${RESET}\""
    exit 1
  fi
done

echo "Done"

