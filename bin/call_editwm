#!/usr/bin/env bash

source call_bashhelper
#---------------------------------------------------------------------------------------------------------
# Create help text
function Usage {
    cat <<USAGE

---------------------------------------------------------------------------------------------------
call_editwm

Script to create a manual edit of white matter segmentation based on wm.mgz from FreeSurfer. The 
script will open ITK-Snap to create a manual edit file.

Args:
  -s <subject>  subject ID
  -n <session>  session number
  <fs_dir>      path to FreeSurfer-directory, including subject ID
  <man seg fn>  output file name of manual segmentation

Specify only '-s' and/or 'n' if you've run the pipeline as it is without changing directories or 
filenames; this option will look for all the default directories and files. If you want to edit
your own things, specify the FreeSurfer directory and output name for segmentation and leave the 
'-s' and '-n' flag empty.

Usage:
  call_editwm <fs_dir> <segmentation file name>

Example:
  call_editwm $SUBJECTS_DIR/sub-001 sub-001_desc-manualsegwm.nii.gz
  call_editwm -s sub-001 -n 1
  
---------------------------------------------------------------------------------------------------

USAGE
    exit 1
}

if [[ $# -lt 1 ]] ; then
  Usage >&2
  exit 1
fi

# Check for subject & session flags
while getopts s:n: argument
do
  case ${argument} in
    s)  sub=${OPTARG}
          ;;
    n)  ses=${OPTARG}
          ;;
  esac
done

#-----------------------------------------------------------------------------
# Run it

if [[ ! -z ${sub} ]]; then

  # collect subject name
  read base_path base <<< "$(collect_session_info "$ses" "$sub")"
  mask_dir="${DIR_DATA_DERIV}/manual_masks/${base_path}"

  FS_DIR=${SUBJECTS_DIR}/${sub}
  MAN=${mask_dir}/${base}_acq-${DATA^^}_desc-manualsegwm.nii.gz
else
  FS_DIR=${@:$OPTIND:1}
  MAN=${@:$OPTIND+1:1}
fi

# create ref from rawavg.mgz
if [[ -d ${FS_DIR} ]]; then
  cmd="call_mriconvert ${FS_DIR}/mri/rawavg.mgz"
  print_cmd "${cmd}" && eval "${cmd}"
  if [[ $? -ne 0 || ! -f ${MAN} ]]; then
    echo
    print_line -
    print_error_msg "$(basename ${0})" "call_mriconvert" "File ${BOLD_GREEN}${FS_DIR}/mri/rawavg.nii.gz${RESET} was not created"
    exit 1
  fi  

  cmd="call_mriconvert ${FS_DIR}/mri/wm.mgz"
  print_cmd "${cmd}" && eval "${cmd}"
  if [[ $? -ne 0 || ! -f ${MAN} ]]; then
    echo
    print_line -
    print_error_msg "$(basename ${0})" "call_mriconvert" "File ${BOLD_GREEN}${FS_DIR}/mri/wm.nii.gz${RESET} was not created"
    exit 1
  fi  

else
  echo
  print_line -
  print_error_msg "$(basename ${0})" "find" "FreeSurfer directory ${BOLD_GREEN}${FS_DIR}${RESET} does not exit"
  exit 1
fi

if [[ ! -f ${MAN} ]]; then
  if [[ ! -d $(dirname ${MAN}) ]]; then
    mkdir -p $(dirname ${MAN})
  fi
  print_create_img "${MAN}"
  cmd="call_createimg ${FS_DIR}/mri/rawavg.nii.gz ${MAN}"
  print_cmd "${cmd}" && eval "${cmd}"

  if [[ $? -ne 0 || ! -f ${MAN} ]]; then
    echo
    print_line -
    print_error_msg "$(basename ${0})" "call_createimg" "Mask ${BOLD_GREEN}${MAN}${RESET} was not created"
    exit 1
  fi    
fi

echo -e "T1w: ${BOLD_GREEN}${FS_DIR}/mri/rawavg.nii.gz${RESET}"
echo -e "WM: ${BOLD_GREEN}${FS_DIR}/mri/wm.nii.gz${RESET}"
echo -e "Mask: ${BOLD_GREEN}${MAN}${RESET}"

cmd="launch_itksnap -g ${FS_DIR}/mri/rawavg.nii.gz -o ${FS_DIR}/mri/wm.nii.gz -s ${MAN}"
print_cmd "${cmd}" && eval "${cmd}" 2>/dev/null
if [[ $? -ne 0 ]]; then
  echo
  print_line -
  print_error_msg "$(basename ${0})" "launch_itksnap"
  exit 1
fi

# copy header
cmd="call_copyheader ${BOLD_GREEN}${FS_DIR}/mri/rawavg.nii.gz ${MAN}"
print_cmd "${cmd}" && eval "${cmd}"
if [[ $? -ne 0 ]]; then
  echo
  print_line -
  print_error_msg "$(basename ${0})" "call_copyheader"
  exit 1
fi
