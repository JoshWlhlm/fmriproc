#!/usr/bin/env bash

function Usage {
  cat <<USAGE

---------------------------------------------------------------------------------------------------
call_fs_to_ses1

This script computes a transformation matrix to align the anatomical image from FreeSurfer space 
('orig.mgz') to the session-1 anatomical image (usually from the MP2RAGE sequence), as derived 
from pymp2rage outputs. This transformation is often used for mapping FreeSurfer segmentations 
to the original acquisition space for visualization or analysis.

Two registration tools are supported:
  - FreeSurfer's 'tkregister2': for surface-aligned, linear transforms using header info.
  - ANTs' 'antsRegistration': for rigid-body registration using mutual information.

This script assumes the following directory structure and environment variables:
  - \$FS          points to the FreeSurfer SUBJECTS_DIR
  - \$PYMP2RAGE   base path to pymp2rage output
  - \$CTX         directory to store transformation matrices

The script looks for:
  - \$FS/<subject>/mri/orig.mgz       : the anatomical image from FreeSurfer
  - \$PYMP2RAGE/<subject>/ses-1       : MP2RAGE output directory

The script writes:
  - \$CTX/transforms/<subject>_from-fs_to-ses1_desc-genaff.mat (for ANTs)
  - or
  - \$CTX/transforms/<subject>_from-fs_to-rawavg_desc-genaff.dat (for FreeSurfer)

Usage:
  call_fs_to_ses1 [-s ants|fs] <subject>

Arguments:
  -s <software>   Registration backend: 'ants' (default) or 'fs' (tkregister2)
  <subject>       Subject ID (e.g., sub-001). Must exist in \$FS.

Options:
  -h|--help       print this help text

Examples:
  call_fs_to_ses1 sub-001
    → Registers FreeSurfer's orig.mgz to MP2RAGE ses-1 T1w using ANTs

  call_fs_to_ses1 -s fs sub-002
    → Registers rawavg.mgz to orig.mgz using FreeSurfer's tkregister2

Notes:
  - The script uses default directory structures. If you have changed them, modify the
    relevant environment variables or edit the script.
  - If rawavg.mgz is used, it will be converted to NIfTI if required.
  - Output transform matrix will not be overwritten unless manually removed.

---------------------------------------------------------------------------------------------------

USAGE

}

#-----------------------------------------------------------------------------
# Deal with arguments
while getopts :-:hs: arg
do
  case ${arg} in
    -)
      case "${OPTARG}" in
        help)
          Usage && exit 0
          ;;
        *)
          Usage
          print_error_msg "$(basename ${0})" "getopt" "Unknown option --${OPTARG}"
          exit 1
          ;;
      esac
      ;;   
    h)  Usage && exit 0
          ;;    
    s)  SOFTWARE=${OPTARG}
          ;; 
  esac
done

if [[ $# -lt 1 ]] ; then
  Usage && exit 0
fi

if [[ -z ${SOFTWARE} ]]; then
  SOFTWARE="ants"
else
  SOFTWARE=${SOFTWARE}
fi

SUBJECT=${@:$OPTIND:1}

#-----------------------------------------------------------------------------
# Check some directories/files
if [[ ! -d "$CTX/${SUBJECT}" ]]; then
  call_ctximport -s "${SUBJECT}"
fi

if [[ $(make_lower ${SOFTWARE}) == "ants" ]]; then
  orig=${FS}/${SUBJECT}/mri/orig.nii.gz
  ses1=$(
    find "${DIR_DATA_DERIV}/pymp2rage/${SUBJECT}/ses-1" \
    -type f \
    -name "${SUBJECT}*" \
    -and -name "*T1w.nii.gz" \
    2>/dev/null
  )

  # convert mgz to nifti
  if [[ ! -f "${orig}" ]]; then
    cmd=(
      call_mriconvert
      "${orig/.nii.gz/.mgz}"
    )
    eval "${cmd[@]}"
    if [[ $? -ne 0 ]]; then
      print_error_msg "$(basename ${0})" "call_mriconvert"
      exit 1
    fi  
  fi

  if [[ -z ${ses1} ]]; then
    ses1="${FS}/${SUBJECT}/mri/rawavg.nii.gz"
    # convert mgz to nifti
    if [[ ! -f ${ses1} ]]; then
      cmd=(
        call_mriconvert
        "${ses1/.nii.gz/.mgz}"
      )
      eval "${cmd[@]}"
      if [[ $? -ne 0 ]]; then
        print_error_msg "$(basename ${0})" "call_mriconvert"
        exit 1
      fi   
    fi
  else
    echo
    print_line -
    print_error_msg "$(basename ${0})" "find" "Could not find ses-1 anatomy and could not use rawavg.mgz"
    exit 1
  fi

  aff="${CTX}/${SUBJECT}/transforms/${SUBJECT}_from-fs_to-ses1_desc-genaff.mat"
  if [[ ! -d "$(dirname ${aff})" ]]; then
    mkdir -p "$(dirname ${aff})"
  fi

  if [[ ! -f ${aff} ]]; then
    cmd=(
      call_antsregistration
      "${ses1}"
      "${orig}"
      "${aff%genaff.mat}"
      rigid
    )
    print_cmd "${cmd[@]}" && eval "${cmd[@]}"
    if [[ $? -ne 0 ]]; then
      echo
      print_line -
      print_error_msg "$(basename ${0})" "call_antsregistration"
      exit 1
    fi  
  else
    echo "Found outdated file; remove and run again to overwrite"
  fi

elif [[ $(make_lower ${SOFTWARE}) == "fs" ]]; then

  aff="${CTX}/${SUBJECT}/transforms/${SUBJECT}_from-fs_to-rawavg_desc-genaff.dat"
  if [[ ! -d "$(dirname ${aff})" ]]; then
    mkdir -p "$(dirname ${aff})"
  fi

  cmd=(
    tkregister2
    --mov "${FS}/${SUBJECT}/mri/rawavg.mgz"
    --targ "${FS}/${SUBJECT}/mri/orig.mgz"
    --reg "${aff}"
    --noedit
    --regheader
  )

  print_cmd "${cmd[@]}" && eval "${cmd[@]}"
  if [[ $? -ne 0 ]]; then
    echo
    print_line -
    print_error_msg "$(basename ${0})" "dcm2niix"
    exit 1
  fi  
fi
