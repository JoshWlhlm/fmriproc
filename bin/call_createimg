#!/usr/bin/env python

import os
import sys
import numpy as np
import nibabel as nb


def main(argv):
    """
---------------------------------------------------------------------------------------------------
call_createimg

This super short script creates an empty NIfTI image based on a reference image. It will match the
dimensions, affine, and header of the reference, but the contents will be initialized to zeros. 
This is useful for creating manual segmentations or binary masks â€” for instance, when preparing 
files in ITK-SNAP or other neuroimaging tools where manual edits are made.

Args:
  <ref file>      Path to the reference NIfTI image. Must be a valid .nii or .nii.gz file.
  <output file>   Path for the output image. Must end in .nii or .nii.gz.

Outputs:
  output file     A new NIfTI volume with the same shape, affine, and header as <ref file>, but
                  with all voxel values set to 0.

Usage:
  call_createimg <input> <output> 

Examples:
  call_createimg input.nii.gz output.nii.gz
  call_createimg /data/sub-01/anat/T1w.nii.gz seg_template.nii.gz

---------------------------------------------------------------------------------------------------
    """

    ref = None
    out = None

    if len(argv) < 2:
        print(main.__doc__)
        sys.exit()

    ref = argv[0]
    out = argv[1]

    if os.path.exists(ref):
        ref_data = nb.load(ref).get_fdata()
        new_data = np.zeros_like(ref_data)
        nb.Nifti1Image(
            new_data,
            affine=nb.load(ref).affine,
            header=nb.load(ref).header
        ).to_filename(out)
    else:
        raise FileNotFoundError(f"Could not find specified file: {ref}")


if __name__ == "__main__":
    main(sys.argv[1:])
