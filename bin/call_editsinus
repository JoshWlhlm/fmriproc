#!/usr/bin/env bash

source call_bashhelper
#---------------------------------------------------------------------------------------------------------
# Create help text
function Usage {
    cat <<USAGE

---------------------------------------------------------------------------------------------------
call_editsinus

Script to create or edit the sagittal sinus segmentation. The script will open ITK-Snap to create a 
manual edit file.

Args:
  -s <subject>  subject ID
  -n <session>  session number
  <t1w-image>   base image to use as reference
  <output name> output name for sinus image, automatically appends _desc-sagittalsinus.nii.gz

Specify only '-s' and/or 'n' if you've run the pipeline as it is without changing directories or 
filenames; this option will look for all the default directories and files. If you want to edit
your own things, specify the FreeSurfer directory and output name for segmentation and leave the 
'-s' and '-n' flag empty.

Usage:
  call_editsinus <fs_dir> <segmentation file name>

Example:
  call_editsinus sub-001_T1w.nii.gz sub-001_desc-sagittalsinus.nii.gz
  call_editsinus -s sub-001 -n 1
  
---------------------------------------------------------------------------------------------------

USAGE
    exit 1
}

if [[ $# -lt 1 ]] ; then
  Usage >&2
  exit 1
fi

# Check for subject & session flags
anat_depth=4
while getopts s:n:a: argument
do
  case ${argument} in
    s)  sub=${OPTARG}
          ;;
    n)  ses=${OPTARG}
          ;;
    a)  anat_depth=${OPTARG}
          ;;          
  esac
done

#-----------------------------------------------------------------------------
# Run it

if [[ ! -z ${sub} ]]; then

  # collect subject name
  read base_path base <<< "$(collect_session_info "$ses" "$sub")"
  mask_dir="${DIR_DATA_DERIV}/manual_masks/${base_path}"

  # anatomical reference
  ANAT_DIR=$(find_hierarchical_anatomy ${anat_depth})
  if [[ ! -d ${ANAT_DIR} ]]; then
    echo
    print_line -
    print_error_msg "$(basename ${0})" "find_hierarchical_anatomy" "Directory ${BOLD_GREEN}${ANAT_DIR}${RESET} does not exist. Reduce depth (=${anat_depth})"
    exit 1
  fi

  REF=$(find ${ANAT_DIR}/${base_path} -type f -name "${sub}*" -and -name "*T1w.nii.gz" 2>/dev/null)
  if [[ ! -f ${REF} ]]; then
    echo
    print_line -
    print_error_msg "$(basename ${0})" "find" "No file with ${BOLD_RED}${sub}*${RESET} and ${BOLD_RED}*T1w.nii.gz${RESET} in ${BOLD_GREEN}${ANAT_DIR}${RESET}"
    exit 1
  fi

  MAN=${mask_dir}/${base}_acq-${DATA^^}_desc-sagittalsinus.nii.gz
else
  REF=${@:$OPTIND:1}

  if [[ ! -f ${REF} ]]; then
    echo
    print_line -
    print_error_msg "$(basename ${0})" "find" "Anatomical file ${BOLD_GREEN}${REF}${RESET} does not exist"
    exit 1
  fi

  MAN=${@:$OPTIND+1:1}
fi


if [[ ! -f ${MAN} ]]; then
  if [[ ! -d $(dirname ${MAN}) ]]; then
    mkdir -p $(dirname ${MAN})
  fi
  echo "Creating $(basename ${man}) with call_createimg"    
  cmd="call_createimg ${REF} ${MAN}"
  print_cmd "${cmd}" && "${cmd}"
fi

echo -e "T1w:  ${BOLD_GREEN}${REF}${RESET}"
echo -e "Mask: ${BOLD_GREEN}${MAN}${RESET}"

cmd="launch_itksnap -g ${REF} -s ${MAN}"
print_cmd "${cmd}" && "${cmd}" 2>/dev/null
if [[ $? -ne 0 ]]; then
  echo
  print_line -
  print_error_msg "$(basename ${0})" "launch_itksnap"
  exit 1
fi

cmd="call_copyheader ${REF} ${MAN}"
print_cmd "${cmd}" && "${cmd}"
if [[ $? -ne 0 ]]; then
  echo
  print_line -
  print_error_msg "$(basename ${0})" "call_copyheader"
  exit 1
fi
