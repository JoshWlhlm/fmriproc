#!/usr/bin/env python

import sys
from fmriproc import image

def main(argv):

    """
---------------------------------------------------------------------------------------------------
call_slicetiming

Add slice timings to a given json file based on the multiband factor, repetition time, and 
number of slices. Assumes ascending slice ordering per multiband excitation. For more exotic slice-
ordering, you can check the 'fmriproc.image.slice_timings' function to see if you can implement
your particular use case (or open an issue).

Mandatory (required input):
    <json>          string pointing to an existing json file
    <tr>            repetition time (in seconds)
    <slices>        number of slices in the acquisition

Optional (flags with defaults):
    <mb>            multiband factor (if present); default = 1 (no multiband)

Outputs
    <json>  existing json file with "SliceTiming" field populated

Example:
    call_slicetiming func.json 1.5 57 3    # TR=1.5, 57 slices, MB=3

---------------------------------------------------------------------------------------------------
    """

    in_file = None
    TR = None
    n_slices = None
    MB_factor = 1

    if len(argv) < 3:
        print(main.__doc__)
        sys.exit()

    in_file, TR, n_slices = argv[:3]
    MB_factor = argv[3] if len(argv) >= 4 else 1

    if len(argv) > 4:
        raise ValueError(
            f"Too many arguments ({len(argv)}). Usage: "
            "call_slicetiming <json_file> <tr> <nr_slices> <mb_factor>"
        )

    image.slice_timings_to_json(
        in_file,
        tr=float(TR),
        nr_slices=int(n_slices),
        mb_factor=int(MB_factor)
    )

if __name__ == "__main__":
    main(sys.argv[1:])
