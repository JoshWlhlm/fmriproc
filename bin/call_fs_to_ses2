#!/usr/bin/env bash

function Usage {
  cat <<USAGE

---------------------------------------------------------------------------------------------------
call_fs_to_ses2

This script registers the 'orig.mgz' image from FreeSurfer to the anatomical image of a specified 
session (default: ses-2) from the MP2RAGE output. It computes a rigid transformation matrix using 
ANTs' 'call_antsregistration' and saves the resulting matrix in the subject's CTX directory.

The script assumes a standardized data structure and environment variable configuration:
  - \$FS              should point to the FreeSurfer SUBJECTS_DIR
  - \$DIR_DATA_HOME   should point to the directory containing MP2RAGE output (e.g., BIDS 
                       derivatives)
  - \$CTX             should be the output root for storing transform files

It will search for the following files:
  - FreeSurfer anatomical:       \$FS/<subject>/mri/orig.mgz
  - Target session image:        \$DIR_DATA_HOME/<subject>/ses-<n>/anat/*acq-MP2RAGE_T1w.nii.gz

It will output:
  - Transformation matrix:       \$CTX/<subject>/transforms<subject>_from-fs_to-ses<n>_desc-genaff.
                                mat

Arguments:
  -n <session>     Specify session number (e.g., 2 or 3); defaults to 2 if not provided
  <subject>        Subject ID (e.g., sub-001)

Usage:
  call_fs_to_ses2 [-n <session>] <subject>

Examples:
  call_fs_to_ses2 sub-001
    → Registers FreeSurfer orig.mgz to MP2RAGE session 2 T1w and outputs transformation matrix

  call_fs_to_ses2 -n 3 sub-001
    → Registers to session 3 anatomy instead of the default session 2

Notes:
  - The output matrix will not be overwritten unless manually removed
  - If orig.nii.gz does not exist, it is generated from orig.mgz using call_mriconvert
  - Assumes you have already run call_ctximport or have valid \$CTX/<subject> structure

---------------------------------------------------------------------------------------------------


USAGE
  
}

#-----------------------------------------------------------------------------
# Deal with arguments
while getopts :-:hn: arg
do
  case ${arg} in
    -)
      case "${OPTARG}" in
        help)
          Usage && exit 0
          ;;
        *)
          Usage
          print_error_msg "$(basename ${0})" "getopt" "Unknown option --${OPTARG}"
          exit 1
          ;;
      esac
      ;;   
    h)  Usage && exit 0
          ;;      
    n)  SESSION=${OPTARG}
          ;;      
  esac
done

if [[ $# -lt 1 ]] ; then
  Usage && exit 0
fi

if [[ -z ${SESSION} ]]; then
  SESSION="1"
else
  SESSION=${SESSION}
fi

SUBJECT=${@:$OPTIND:1}

#-----------------------------------------------------------------------------
# Check some directories/files
if [[ ! -d "$CTX/${SUBJECT}" ]]; then
  call_ctximport -s "${SUBJECT}"
fi

orig="${FS}/${SUBJECT}/mri/orig.nii.gz"
ses2=$(
  find "${DIR_DATA_HOME}/${SUBJECT}/ses-${SESSION}/anat" \
  -type f \
  -name "${SUBJECT}*" \
  -and -name "*acq-MP2RAGE_T1w.nii.gz" \
  2>/dev/null
)

# convert mgz to nifti
if [[ ! -f "${orig}" ]]; then
  cmd=(
    call_mriconvert
    "${orig/.nii.gz/.mgz}"
  )
  eval "${cmd[@]}"
  if [[ $? -ne 0 ]]; then
    print_error_msg "$(basename ${0})" "call_mriconvert"
    exit 1
  fi  
fi

if [[ -z "${ses2}" ]]; then
  echo
  print_line -
  print_error_msg "$(basename ${0})" "find" "Could not find ses-${SESSION} anatomy"
  exit 1
fi

aff="${CTX}/${SUBJECT}/transforms/${SUBJECT}_from-fs_to-ses${SESSION}_desc-genaff.mat"
if [[ ! -d "$(dirname ${aff})" ]]; then
  mkdir -p "$(dirname ${aff})"
fi

if [[ ! -f "${aff}" ]]; then
  cmd=(
    call_antsregistration
    "${ses2}"
    "${orig}"
    "${aff%genaff.mat}"
    rigid
  )
  print_cmd "${cmd[@]}" && eval "${cmd[@]}"
else
  echo "Found outdated file; remove and run again to overwrite"
fi
