#!/usr/bin/env python

import os
from scipy import ndimage
import nibabel as nb
import sys
opj = os.path.join

def main(argv):

    """
---------------------------------------------------------------------------------------------------
call_dilate

Dilate a binary mask with ndimage

Arguments:
    <input img>     path to input image
    <output img>    path to output image
    <iterations>    number of iterations
    <mask>          If a mask is given, only those elements with a True value at the corresponding 
                    mask element are modified at each iteration [optional]

Example:
    call_dilate  input.nii.gz output.nii.gz

---------------------------------------------------------------------------------------------------
    """

    input   = None
    output  = None
    nr_iter = 2
    mask    = None

    if len(argv) < 3:
        raise ValueError("Expected at least 3 arguments: input, output, nr_iter")

    input   = argv[0]
    output  = argv[1]
    nr_iter = int(argv[2])
    mask    = argv[3] if len(argv) > 3 else None

    img = nb.load(input)

    if mask:
        mask = nb.load(mask).get_fdata()

    # cmd
    dilated = ndimage.binary_dilation(
        img.get_fdata(),
        iterations=nr_iter,
        mask=mask
    )
    
    # write to file
    nb.Nifti1Image(
        dilated,
        affine=img.affine,
        header=img.header
    ).to_filename(output)

if __name__ == "__main__":
    main(sys.argv[1:])
