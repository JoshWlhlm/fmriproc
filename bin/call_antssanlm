#!/usr/bin/env bash

#---------------------------------------------------------------------------------------------------
# call_antsbias - Wrapper for ANTs N4BiasFieldCorrection with flexible options passthrough
#---------------------------------------------------------------------------------------------------

function Usage {
    cat <<USAGE

---------------------------------------------------------------------------------------------------
call_antssanlm

Wrapper for SANLM denoising with ANTs' DenoiseImage. Takes an input file and an output file
using default setting for 'DenoiseImage'. You can add more flags directly to the function
after specifying the input and output files. This is the ANTs version of the call_spmsanlm, which
requires a Matlab/MCR installation.

This script allows specifying:
- Required input file
- Required output file
- Any additional options from DenoiseImage, passed as extra arguments (kwargs).

Usage:
  call_antssanlm <input file> <output file> [extra_options]

Options:
  -o                Overwrite existing output file
  -v                Make some noise
  [extra_options]   anything after gets passed to DenoiseImage

Example:
  call_antssanlm input.nii.gz output.nii.gz -x mask.nii.gz -r 1

---------------------------------------------------------------------------------------------------

USAGE
    exit 1
}

#---------------------------------------------------------------------------------------------------
# Defaults
ow=0
verbose=0

#---------------------------------------------------------------------------------------------------
# Parse options
while getopts "vo:" opt; do
  case $opt in
    o) ow=1 ;;
    v) verbose=1 ;;
    *) Usage ;;
  esac
done
shift $((OPTIND-1))

#---------------------------------------------------------------------------------------------------
# Required arguments
if [[ $# -lt 1 ]]; then
  Usage
fi

input="$(readlink -f "$1")"
output="${2:-}"

shift 2 || true  # Shift away input & output arguments if present

# Capture any additional arguments passed after "--"
extra_args=()
while [[ $# -gt 0 ]]; do
  extra_args+=("$1")
  shift
done

#---------------------------------------------------------------------------------------------------
# Run N4BiasFieldCorrection
if [[ ! -f "$input" ]]; then
  echo "Error: Input file does not exist: $input" >&2
  exit 1
fi

if [[ -z "$output" ]]; then
  echo "Error: please specify output file" >&2
  exit 1
fi

dim=$(fslval "$input" dim0)
if [[ -z "$dim" ]]; then
  echo "Error: Unable to determine image dimensionality with fslval." >&2
  exit 1
fi

cmd=(
  DenoiseImage
  --image-dimensionality "${dim}"
  --input-image "${input}"
  --output "${output}"
  --verbose ${verbose}
  "${extra_args[@]}"
)

if [[ ${verbose} -eq 1 ]]; then
  echo "Executing: ${cmd[*]}"
fi

eval "${cmd[@]}"

if [[ $? -ne 0 ]]; then
  echo "Error: DenoiseImage failed." >&2
  exit 1
fi

if [[ ${verbose} -eq 1 ]]; then
  echo "Denoising complete."
fi
