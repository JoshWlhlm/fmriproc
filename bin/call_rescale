#!/usr/bin/env python

import sys
import nibabel as nb
from lazyfmri import utils

def main(argv):
    """
---------------------------------------------------------------------------------------------------
call_rescale

Wrapper for ANTs' 'ImageMath' to rescale the intensity values of an input image to a new range 
defined by a user-specified minimum and maximum. This is particularly useful for preparing images 
for visualization or preprocessing pipelines that assume a consistent intensity range.

The rescaling is performed using:
  ImageMath <dim> <output> RescaleImage <input> <min> <max>

Usage:
  call_rescale <input_image> <min_value> <max_value> [<output_image>]

Arguments:
  <input_image>   Path to the image whose intensity range should be rescaled
  <min_value>     New minimum intensity value (e.g., 0)
  <max_value>     New maximum intensity value (e.g., 4095)

Optional:
  <output_image>  Output image path. If not specified, the input file will be overwritten

Outputs:
  A NIfTI image where intensity values have been rescaled to the specified range.
  Header and affine are preserved from the input image.

Example:
  call_rescale sub-01_T1w.nii.gz 0 4095
  call_rescale sub-01_T1w.nii.gz 0 255 sub-01_T1w_rescaled.nii.gz

---------------------------------------------------------------------------------------------------
    """

    if len(argv) < 3:
        print(main.__doc__)
        sys.exit(1)

    input_image, min_range, max_range = argv[:3]
    output = argv[3] if len(argv) > 3 else input_image

    img = nb.load(input_image)
    dim = img.header["dim"][0]
    cmd_txt = f"ImageMath {dim} {output} RescaleImage {input_image} {min_range} {max_range}"
    utils.run_shell_wrapper(cmd_txt)

    # set code
    utils.run_shell_wrapper(f"call_copyheader {input_image} {output}")

if __name__ == "__main__":
    main(sys.argv[1:])
