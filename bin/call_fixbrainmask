#!/usr/bin/env python

import os
import sys
import numpy as np
import nibabel as nb
from nilearn import image
opj = os.path.join

def main(argv):

    """
---------------------------------------------------------------------------------------------------
call_fixbrainmask

Sometimes the brainmask.mgz image contains remnants of the skull around the mouth/eye area. I am 
not entirely sure where this comes from and to what extent this affects the surface reconstruc-
tion, but this script can be used to get rid of that by using a binary mask to mask that stuff 
out. The input mask is either a preprocessed image or automatically retrieved from a directory if 
it contains a file with 'spm_mask' in its name.

The result is written back into the FreeSurfer subject directory as a replacement for the original 
brainmask and additionally stored as 'brain.finalsurfs.manedit.mgz'.

Usage:
  call_fixbrainmask <freesurfer_subject_dir> <mask_dir_or_file>

Positional Arguments:
  <FreeSurfer>    path to subject's FreeSurfer directory (i.e., SUBJECTS_DIR/<subject>)
  <Man seg>       path to directory containing the manual segmentation mask, or directly to 
                  a binary mask file to be applied

Outputs:
  brainmask.mgz and brain.finalsurfs.manedit.mgz with cleaned up masks

Example:
  call_fixbrainmask /path/to/FreeSurfer/sub-01 /path/to/manual_masks/sub-01/ses-1
  call_fixbrainmask /path/to/FreeSurfer/sub-01 /path/to/manual_masks/spm_mask_eye_trimmed.nii.gz

Notes:
  - The mask will be resampled to match the FreeSurfer brainmask
  - Overwrites 'brainmask.mgz' directly, so make a backup if needed
  - Intended as a cleanup step prior to surface regeneration or reprocessing

---------------------------------------------------------------------------------------------------
    """

    fsdir   = None
    manseg  = None

    if len(argv) < 2:
        print("\nNEED AT LEAST A SUBJECT ID")
        print(main.__doc__)
        sys.exit()

    fsdir   = argv[0]
    manseg  = argv[1]

    if not os.path.exists(fsdir):
        raise ValueError(f"Could not find FreeSurfer folder; specify SUBJECTS_DIR/<subject>")
    
    # if we got a directory, look for file with 'spm_mask'
    spm_mask = None
    if not os.path.isfile(manseg):
        for ii in os.listdir(manseg):
            if "spm_mask" in ii:
                spm_mask = opj(manseg, ii)
        
        if not spm_mask:
            raise ValueError(f"Could find file with 'spm_mask' in '{manseg}'")
    else:
        spm_mask = manseg
            
    brainmask = opj(fsdir, 'mri', 'brainmask.mgz')
    mask_img = image.resample_to_img(
        spm_mask,
        brainmask,
        interpolation='nearest'
    )

    mask_img = nb.freesurfer.MGHImage(
        mask_img.get_fdata().astype(np.float32),
        affine=mask_img.affine
    )

    new_brainmask = image.math_img(
        'brain * (mask > 0)',
        brain=brainmask,
        mask=mask_img
    )

    new_brainmask.to_filename(opj(fsdir, 'mri', 'brainmask.mgz'))
    new_brainmask.to_filename(opj(fsdir, 'mri', 'brain.finalsurfs.manedit.mgz'))

if __name__ == "__main__":
    main(sys.argv[1:])
