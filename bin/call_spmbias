#!/usr/bin/env bash

#-----------------------------------------------------------------------------
# Get bash helper functions
source call_bashhelper

#-----------------------------------------------------------------------------
# Create help text
function Usage {
    cat <<USAGE

---------------------------------------------------------------------------------------------------
call_spmbias

Bias field correction using SPM12. Let's see if this makes CAT12 more reliable.. Seems to be 
pretty good and up there with ANTs' N4-biasfield correction. Apparently, John Polimeni and 
Renzo Huber use this prior to FreeSurfer and find it really helps..

Usage:
  call_spmsanlm [options] <input image> <output directory + basename>

Optional:
  -s <SPM_PATH>   path to SPM; should contain CAT12 in toolbox directory
  -l <LOG_PATH>	  path to working directory, defaults to DIR_LOGS

Options:
  -h|--help       print this help text
  -k|--keep       keep intermediate files

Positional:
  <input image>   input image. Can either be *.nii.gz or *.nii image. In the case of the former,
                  new *.nii-file will be created alongside of the *.nii.gz file, as SPM does
                  not like *.nii.gz files.
  <output base>	  directory+basename of output image

Example:
  call_spmmask inv2.nii.gz mask_inv2
  call_spmmask --keep inv2.nii.gz mask_inv2

---------------------------------------------------------------------------------------------------

USAGE

}

if [[ $# -lt 1 ]] ; then
  Usage && exit 0
fi

# Check for subject & session flags
RM=1
while getopts :-:hkl:s: argument
do
  case ${argument} in
    -)
      case "${OPTARG}" in       
        help)
          Usage && exit 0
          ;;
        keep)
          RM=0
          ;;        
        *)
          Usage
          print_error_msg "$(basename ${0})" "getopt" "Unknown option --${OPTARG}"
          exit 1
          ;;
      esac
      ;;  
    l)  LOG=${OPTARG}
            ;;
    s)  SPM=${OPTARG}
            ;;
    h)  Usage && exit 0
          ;;
    k)  RM=0
          ;;                      
  esac
done

INPUT=${@:$OPTIND:1}
OUTPUT=${@:$OPTIND+1:1}

#-----------------------------------------------------------------------------
# Define default LOG-path
if [[ -z ${LOG} ]]; then
  if [[ -z ${DIR_LOGS} ]]; then
    LOG_DIR=${PWD}
  else
    LOG_DIR=${DIR_LOGS}
  fi
else
  LOG_DIR=${LOG}
fi

if [[ ! -d ${LOG_DIR} ]]; then
  mkdir -p ${LOG_DIR}
fi

#-----------------------------------------------------------------------------
# Define default SPM-path
if [[ -z ${SPM} ]]; then
  if [[ -z ${SPM_PATH} ]]; then
    echo
    print_line -
    print_error_msg "$(basename ${0})" "SPM" "SPM_PATH-variable is empty. Set accordingly or use '-s <spm_path>' input.."
    exit 1
  else
    SPM_PATH=${SPM_PATH}
  fi
else
  SPM_PATH=${SPM}
fi

# double check if directory exists
if [[ ! -d ${SPM_PATH} ]]; then
  print_error_msg "$(basename ${0})" "SPM" "Could not find SPM directory ${BOLD_GREEN}${SPM_PATH}${RESET}"
  exit 1
fi

# if file specified is in current directory, add entire path
INPUT=$(fetch_filepath ${INPUT})

ext=$(fetch_extension ${INPUT})
if [[ ${ext} == "gz" ]]; then
  in_file=$(dirname ${INPUT})/$(basename ${INPUT} .gz)
  gunzip -fc ${INPUT} > ${in_file}
else
  in_file=${INPUT}
fi

#-----------------------------------------------------------------------------
# Create new script
new_script=$(dirname ${in_file})/spm_bias.m
if [[ -f ${new_script} ]]; then
  rm -r ${new_script}
fi

if [[ ! -d $(dirname ${OUTPUT}) ]]; then
  mkdir -p $(dirname ${OUTPUT})
fi

mask_img=$(find $(dirname ${in_file}) -type f -name "m$(basename ${in_file})*" 2>/dev/null)
if [[ -z ${mask_img} ]]; then

  make_bias_script ${SPM_PATH} ${in_file} ${new_script}

  # call_matlab = in call_bashhelper
  call_matlab ${new_script}

  mask_img=$(find $(dirname ${in_file}) -type f -name "m$(basename ${in_file})*" 2>/dev/null)
  if [[ $? -ne 0 || -z "${mask_img}" ]]; then
    echo
    print_line -
    print_error_msg "$(basename ${0})" "make_bias_script"
    exit 1
  fi

fi

if [[ ${RM} -eq 1 ]]; then
  rm -r $(dirname ${in_file})/c*$(basename ${in_file}) *.mat 2>/dev/null
  rm -r $(dirname ${in_file})/*seg8.mat 2>/dev/null
  rm -r $(dirname ${in_file})/BiasField*
fi

# Convert SPM's .nii-files to .nii.gz if the input file was nii.gz
mask_img=$(find $(dirname ${in_file}) -type f -name "m$(basename ${in_file})*" 2>/dev/null)
if [[ ! -z ${mask_img} ]]; then
  if [[ ${ext} == "gz" ]]; then
    gzip -cf ${mask_img} > ${OUTPUT} 2>/dev/null
    rm -r ${in_file} ${mask_img} ${INPUT} 2>/dev/null
  else
    mv ${mask_img} ${OUTPUT}
  fi
fi

# copy header
call_copyheader ${in_file} ${OUTPUT}
