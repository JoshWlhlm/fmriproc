#!/usr/bin/env bash

#---------------------------------------------------------------------------------------------------------
# check if there's is a setup file containing the major paths and source it if it exists
source "${SETUP_FILE}"
source call_bashhelper

#---------------------------------------------------------------------------------------------------------
# Create help text
function Usage {
    cat <<USAGE

---------------------------------------------------------------------------------------------------
spinoza_profiling

Sample the profile values of a particular image using call_nighresprofsamp. Here, we provide the
boundaries-image from nighres.layering module and have the program sample values from a particular
dataset (e.g., T1map) across depth. The first argument specifies where the nighres output is, used
for both the layering and profile sampling. The second argument is the main directory where we will
find the file the we want to sample. The last argument specifies a tag to look for the to-be-sampled
file (e.g., T1map)

Usage:
  spinoza_profiling [options] <nighres input> <input folder> <extension for to-be-sampled file>

Arguments:
  -s <subject>        subject ID (e.g., 01). Can also be comma-separated list: 01,02,05
  -n <session>        session ID (e.g., 1, 2, or none)
  -o                  overwrite existing files
  <nighres>           parent directory containing the output files of Nighres
                        -<nighres>/<subject>/<session>/layering/*boundaries*
                        -<nighres>/<subject>/<session>/profiling/*lps_data.nii.gz
  <tag>               tag to use to look for to-be-sampled dataset (e.g., T1map)

Example:
  spinoza_profiling NIGHRES DIR_DATA_HOME T1map
  spinoza_profiling -s 01 -n 2 NIGHRES DIR_DATA_HOME T1map

---------------------------------------------------------------------------------------------------

USAGE
    exit 1
}

if [[ $# -lt 2 ]] ; then
  echo NOT ENOUGH ARGUMENTS SPECIFIED
  Usage >&2
  exit 1
fi

# Check for subject & session flags
OW=0
while getopts s:n: argument
do
  case ${argument} in
    s)  sub=${OPTARG}
          ;;
    n)  ses=${OPTARG}
          ;;
    o)  OW=1
          ;;          
  esac
done

if [[ $# -lt 3 ]] ; then
  Usage >&2
  exit 1
fi

INPUT=${@:$OPTIND:1}
TOBESAMPLED=${@:$OPTIND+1:1}
TAG=${@:$OPTIND+2:1}

if [[ -z ${sub} ]]; then
  # loop through subjects
  search="${INPUT}/${SUBJECT_PREFIX}*"
else
  # read specified subjects into array
  IFS=', ' read -r -a search <<< "${sub}"
  search=${search[@]}
  unset IFS
fi

#-----------------------------------------------------------------------------
# intro
start_timer "Profile sampling with Nighres"

# nighres required this module
check_python_package "nighres"

if [[ ! -d ${INPUT} ]]; then
  print_directory_not_exist "WARNING" "${INPUT}" "No nighres-steps have been run yet.."
  continue
fi

#-----------------------------------------------------------------------------
# Run it
for subID in ${search}; do

  # collect subject name
  sub_name=$(collect_subject_name "$sub" "$subID" "$SUBJECT_PREFIX")
  read base_path base <<< "$(collect_session_info "$ses" "$sub_name")"

  # set paths
  nighres_dir=${INPUT}/${base_path}
  sampled_dir=${TOBESAMPLED}/${base_path}

  #--------------------------------------------------------------------------------------------------------------------------------------------
  # Running MASSP with Nighres

  sampled_data=${nighres_dir}/profiling/${base}_acq-${DATA^^}_desc-profile_${TAG}.nii.gz
  if [[ ! -f ${sampled_data} ]]; then

    # print header
    print_subject_header ${sub_name}
    print_create_img "${sampled_data}"
    
    #-----------------------------------------------------------------------------
    # Check if we can mask inputs
    boundaries=$(find ${nighres_dir}/layering -type f \( -name "*acq-${DATA^^}*" -and -name "*boundaries.nii.gz" \) 2>/dev/null)
    tobesampled=$(find ${sampled_dir} -maxdepth 2 -type f \( -name "*${TAG}*" \) 2>/dev/null)

    if [[ -z ${boundaries} ]]; then
      print_file_not_in_dir "${sub_name}" "boundaries" "${nighres_dir}/layering" "Create it with spinoza_layering ($(master -l layering))"
      continue
    fi

    if [[ -z ${tobesampled} ]]; then
      print_file_not_in_dir "${sub_name}" "sampling [\"*${TAG}\"]" "${sampled_dir}"
      continue
    fi

    cmd="""call_nighresprofsamp \
      -l ${boundaries} \
      -s ${tobesampled} \
      -d ${nighres_dir}/profiling \
      -n ${base}_acq-${DATA^^}_desc-profile_${TAG}"""

    print_cmd "${cmd}" && eval "${cmd}"
    if [[ $? != 0 ]]; then
      echo
      print_line -
      print_error_msg "$(basename ${0})" "$(basename ${cmd})"
      exit 1
    fi

  else
    print_output_exists "${sub_name}" "${sampled_data}"
  fi

done

#-----------------------------------------------------------------------------
# outro
end_timer
