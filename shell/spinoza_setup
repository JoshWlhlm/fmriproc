#!/usr/bin/env bash

export SETUP_FILE="`which spinoza_setup`"
export SETUP_DIR="$(dirname ${SETUP_FILE})"
export REPO_DIR="CH_REPO_DIR"
export BIN_DIR="CH_BIN_DIR"

#===================================================================================================
# VARIABLES
#===================================================================================================

# MRI
export MRI_SYSTEM="siemens" # "philips"

# Project stuff
export DIR_PROJECTS="/Users/heij/git/openfmri"
export PROJECT="EPI"
export TASK_SES1=("2R")
export TASK_SES2="LR"
export SUBJECT_PREFIX="sub-"
export COMBINE_SEGMENTATIONS="weighted"
export PATH_HOME=${DIR_PROJECTS}/logs
export SEARCH_ANATOMICALS=("T2w" "FLAIR" "T1w")

export PYBEST_SPACE="fsnative"
export PYBEST_N_COMPS=20

# DATA TYPE(S)
export ACQ=("MPRAGE")  # or ("MP2RAGE" "MP2RAGEME")
export DATA=${ACQ[0]}   # or MP2RAGEME/AVERAGE

# phase encoding direction for BOLD; assume inverse for FMAP
export PE_DIR_BOLD="AP"

# If you have access to SGE, leave to SGE; otherwise change to e.g., LOCAL
export PLACE="SGE"
export SGE_QUEUE_LONG="long.q@jupiter"
export SGE_QUEUE_SHORT="short.q@jupiter"
export OMP_NUM_THREADS=1 
export MKL_NUM_THREADS=1
export OPENBLAS_NUM_THREADS=1

# MATLAB
export MRRECON=/packages/matlab/toolbox/MRecon/3.0.541  
export MATLAB_CMD="matlab -nosplash -nodisplay -batch" # find with 'which matlab'
export SPM_PATH=${PATH_HOME}/spm12    
export SKIP_LINES=34                               

# fMRIPREP
export MRIQC_SIMG=/packages/singularity_containers/containers_bids-mriqc--23.0.1.simg
export FPREP_SIMG=/packages/singularity_containers/containers_bids-fmriprep--20.2.5.simg
export FPREP_OUT_SPACES="fsnative func"
export FPREP_BINDING="/data1/projects"                                          # binding directory for singularity image
export CIFTI=""                                                                 # leave empty if you don't want cifti output
export DO_SYN=0                                                                 # set to zero if you do not want additional syn-distortion correction
export BOLD_T1W_INIT="register"                                                 # default = register; for partial FOV, set to 'header'
export FS_LICENSE=${REPO_DIR}/misc/license.txt                                  # this thing needs to be along the FPREP_BINDING path!

# PYBEST

# For DATA == AVERAGE we'll need multiple acquisitions
if [[ ${DATA} == "AVERAGE" ]]; then
  if [[ `echo ${#ACQ[@]}` -ne 2 ]]; then
    echo "Average of what..? \"ACQ\" variable in spinoza_setup has ${#ACQ[@]} item(s) [\"${ACQ[@]}\"]"
    exit 1
  fi
fi

#===================================================================================================
# PATHS
#===================================================================================================

export DIR_SCRIPTS=${REPO_DIR}
export DIR_DATA_HOME=${DIR_PROJECTS}/${PROJECT}
export DIR_LOGS=${DIR_DATA_HOME}/code/logs
export DIR_DATA_SOURCE=${DIR_DATA_HOME}/sourcedata
export DIR_DATA_DERIV=${DIR_DATA_HOME}/derivatives
export DIR_DATA_ATLAS=${PATH_HOME}/atlas/MICCAI2012-Multi-Atlas-Challenge-Data
export SOURCEDATA=${DIR_DATA_HOME}
export DERIVATIVES=${DIR_DATA_DERIV}
export MASKS=${DIR_DATA_DERIV}/manual_masks
export ANTS=${DIR_DATA_DERIV}/ants
export FS=${DIR_DATA_DERIV}/freesurfer
export SUBJECTS_DIR=${FS}
export ANTS=${DIR_DATA_DERIV}/ants
export AVG=${DIR_DATA_DERIV}/average
export MASKED_AVG=${DIR_DATA_DERIV}/masked_average
export PYMP2RAGE=${DIR_DATA_DERIV}/pymp2rage
export NIGHRES=${DIR_DATA_DERIV}/nighres
export FSL=${DIR_DATA_DERIV}/fsl
export SKULLSTRIP=${DIR_DATA_DERIV}/skullstripped
export CTX=${DIR_DATA_DERIV}/pycortex
export PRF=${DIR_DATA_DERIV}/prf

# Make executables available in environment
export PATH=${PATH}:${DIR_SCRIPTS}/bin
export PATH=${PATH}:${DIR_SCRIPTS}/shell

# set SSH_KEY for start_ssh
export SSH_KEY="${HOME}/.ssh/hp_windows"
